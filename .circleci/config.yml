# CircleCI automatically reads this file from our repo and uses it for
# configuration. Docs:
# https://circleci.com/docs/2.0/configuration-reference/
# https://circleci.com/docs/2.0/sample-config/
version: 2.1

jobs:
  build:
    docker:
      # https://circleci.com/developer/orbs/orb/circleci/gcp-cli#executors-google
      - image: google/cloud-sdk

    steps:
      - checkout

      - restore_cache:
          keys:
            - venv-9-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
            - venv-9-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - venv-9-{{ .Branch }}
            - venv-9

      - run:
          name: Install dependencies
          command: |
            apt-get -y install virtualenv pkg-config
            virtualenv local
            source local/bin/activate
            pip install -U pip flake8
            pip -V
            # make sure we install these at head, below
            pip uninstall -y brevity lexrpc oauth-dropins
            pip install -U -r requirements.txt
            pip install coverage coveralls

      - run:
          name: Run tests
          no_output_timeout: 30m
          command: |
            source local/bin/activate
            python3 -m coverage run --source=. --omit=appengine_config.py,cron.py,granary/tests/\*,oauth-dropins/\*,old_apps/\*,setup.py,test_\*,\*_live_test.py -m unittest discover -v
            # disabled for now, fails much of the time due to IG blocking us
            # PYTHONPATH= python3 ./instagram_live_test.py --debug
            python3 -m coverage html -d /tmp/coverage_html
            if [ "$COVERALLS_REPO_TOKEN" != "" ]; then python3 -m coveralls || true; fi

            # check for unintentionally overridden test methods
            # https://flake8.pycqa.org/en/latest/user/error-codes.html#error-codes
            # https://flake8.pycqa.org/en/latest/user/options.html#cmdoption-flake8-select
            python3 -m flake8 --select=F811 granary/tests/test_*.py

      # # TODO: this is continuous deploy. find a way to get all of the API keys
      # # into circle - env var? - then re-enable this.
      # #
      # # only runs if all previous steps succeed, including tests
      # # https://circleci.com/docs/configuration-reference/#the-when-attribute
      # - run:
      #     name: Deploy
      #     command: |
      #       echo $CIRCLE_BRANCH
      #       if [ $CIRCLE_BRANCH = "main" ]; then
      #         echo $FLASK_SECRET_KEY > flask_secret_key
      #         echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      #         gcloud -q app deploy --no-cache --project granary-demo app.yaml index.yaml
      #       fi

      - save_cache:
          key: venv-9-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "setup.py" }}
          paths:
            - "/root/project/local/lib/python3.11/site-packages/"

      - store_artifacts:
          path: /tmp/coverage_html
